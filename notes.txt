Hi 
@julia
 A few of my notes from the thread and how they apply to us:
- We already use the SHA256 non-salted for Facebook and TikTok and salted to Hotjar. We had always hashed the email in the site, as we didn't used GTM, and even if we did, that would be the normal. So far we have only used webs where we can control this and we don't have the Hubspot / Opensocial issue.
- We also don't require the hash to be salted, it was an extra privacy step that we already had, but we send non-hashed emails to Facebook.
- In this context, if we would use it the salt doesn't need to be secret, as the goal of hashing is that the service that receives the hashed email can't compare it with their hashed email database. So there's no reason to create the hash in the website servers, doing it in the client is perfectly fine. (Yes, I'm aware that if an attacker already has the emails, the salt would add an extra protection, but as we use non-salted emails elsewhere, this is not an issue)
- All the info Mixpanel is getting we also send to Hubspot, so in my opinion we aren't creating a new case that requires legal review. Let's just follow the Hubspot procedure in terms of cookies and that's it.
- Has for having the unhashed email address in the dataLayer my preference is not have it and use the sha256 hash as we do with Facebook and TikTok. (we don't have it)
- As for the gp_user_id my current idea is that it should be a JavaScript variable and or dataLayer variable. And its  value is defined by a function that manages its value based on cookie permissions and if it was set up previously. Cookie creation shouldn't be managed by GTM if we can do it in the website. This JavaScript variable would abstract everything to GTM, so with my planned/suggested implementation GTM would not need to consider cookies or consent, as long as we can implement the alias Mixpanel function in the server side.
- I've found the method to merge identities in Mixpanel. It's the alias method. I don't know how we can do it with server side tag management, with code is very easy. I think having this method implemented is mandatory because we'll need it in forms. Please confirm that this is possible in GTM Server + Client.
- As for cookies (or similar tech that can be used to persist information between page views), as said earlier, no tracking cookie can be placed before the user has accepted the analytics cookies or if it refuses the cookies. There's no way a cookie like this can be labeled "essential" in Spain.
- I'm also concerned about the use if GA in the process, as the test we've made adds cookies, we have to check latter if it respects the consent mode. And as we use GA outside tag manager, my concern is that we must check it doesn't create two different cookies and mess it up (now or in the future). It must not also mess information in GA4.
- Our consent mode is documented here: https://github.com/greenpeace/gpes-test-mixpanel-tracking As I imagine this, GTM client side would not be loaded before there's a decision about the cookies (unlike what Google recommends). This ensures that the flow is clean and that there's no duplicated page views.
- In the test implementation I've renamed dataLayer as greenpeaceLayer for the Mixpanel GTM container. The idea is that we can prevent conflicts with GA and the existing GTM for worldwide tracking (GTM-K9LBN3C), as they both use the dataLayer object.
